autossh_tunnel_identity_file: "~/.ssh/id_rsa"
# Allows to configure in which situations the module is allowed to regenerate private keys.
#  The module will always generate a new key if the destination file does not exist.
# By default, the key will be regenerated when it does not match the module’s options, except
# when the key cannot be read or the passphrase does not match. Please note that this changed
# for Ansible 2.10. For Ansible 2.9, the behavior was as if full_idempotence is specified.
# If set to never, the module will fail if the key cannot be read or the passphrase is not matching, and will never regenerate an existing key.
# If set to fail, the module will fail if the key does not correspond to the module’s options.
# If set to partial_idempotence, the key will be regenerated if it does not conform to the module’s options.
# The key is not regenerated if it cannot be read (broken file), the key is protected by an
# unknown passphrase, or when they key is not protected by a passphrase, but a passphrase is specified.
# If set to full_idempotence, the key will be regenerated if it does not conform to the module’s options.
# This is also the case if the key cannot be read (broken file), the key is protected by an unknown passphrase,
# or when they key is not protected by a passphrase, but a passphrase is specified. Make sure you have a backup when using this option!
# If set to always, the module will always regenerate the key. This is equivalent to setting force to true.
# Note that adjusting the comment and the permissions can be changed without regeneration.
# Therefore, even for never, the task can result in changed.
# Choices:
# "never"
# "fail"
# "partial_idempotence" ← (default)
# "full_idempotence"
# "always"
autossh_tunnel_regenerate_identity: "partial_idempotence"
autossh_tunnel_user: "tunnel"
